#!/bin/bash

# Purpose: Simple wrapper to use Debian package manager as pacman
# Author : Anh K. Huynh
# License: Public domain
# Source : http://github.com/icy/pacapt/

_POPT=""    # primary   operation
_SOPT=""    # secondary operation
_TOPT=""    # options for operations
_PKG=""     # packages and extra parameters for apt-get
_VERBOSE="" # verbose mode
_FORCE=""   # force yes

_error() {
  echo >&2 ":: $*"
}

_help() {
  cat <<\EOF
A pacman-liked package manager for Debian users, or
a pacman-liked wrapper for apt-get, dpkg and dpkg-query.

Syntax
  $0 <operation> <option> <packages>

Operations

  Query
    -Q              list all installed packages
    -Ql <package>   list package's files
    -Qi <package>   print package status

  Synchronize
    -S <package>    install package(s)
    -Su             upgrade the system
    -Sy             update package database
    -Ss <package>   search for packages
    -Sy <package>   update package database, then install <package>

  Remove
  Clean up
    -R <package>    remove some packages
    -Sc             delete old downloaded packages
    -Scc            delete all downloaded packages

Options
    -f              force yes
    -v              be verbose
    -w              download packages but donot install them

This program is written by Anh K. Huynh. You can find the original source
and other information at project's home
                http://github.com/icy/pacapt/.
EOF
}

_exec() {
  _error "Going to execute: $* $_VERBOSE $_FORCE"
  eval "$* $_VERBOSE $_FORCE"
}

while getopts "RQShfvluyisqwc" opt; do
  case "$opt" in
    Q|S|R)
      if [ "$_POPT" != "" -a "$_POPT" != "$opt" ]; then
        _error "Only one operation may be used at a time"
        exit 1
      fi
      _POPT="$opt"
      ;;
    s|l|i|q)
        _SOPT="$opt"
      ;;
    u)
      if [ "${_SOPT:0:1}" = "y" ]; then
        _SOPT="uy"
      else
        _SOPT="u"
      fi
      ;;
    y)
      if [ "${_SOPT:0:1}" = "u" ]; then
        _SOPT="uy"
      else
        _SOPT="y"
      fi
      ;;
    c)
      if [ "${_SOPT:0:2}" = "cc" ]; then
        _SOPT="ccc"
      elif [ "${_SOPT:0:1}" = "c" ]; then
        _SOPT="cc"
      else
        _SOPT="$opt"
      fi
      ;;
    w) _TOPT="-d" ;;
    f) _FORCE="-f --force-yes" ;;
    v) _VERBOSE="-v" ;;
    h) _help; exit 0 ;;
  esac
done
shift $((OPTIND - 1))

_PKG="$*"

if [ -z "$_POPT" ]; then
  _error "No operation specified (use -h for help)"
  exit 1
fi

case "$_POPT$_SOPT" in
   "Qi") _exec "dpkg-query -s $_PKG" ;;
   "Ql") _exec "dpkg-query -L $_PKG" ;;
    "Q") _exec "dpkg -l | grep ^ii" ;;
   "Rs") _exec "apt-get autoremove $_PKG" ;;
    "R") _exec "apt-get remove $_PKG" ;;
  "Suy") _VERBOSE="" _exec "apt-get update" ;
         _VERBOSE="" _exec "apt-get upgrade" ;;
   "Su") _VERBOSE="" _exec "apt-get upgrade" ;;
   "Sy") _VERBOSE="" _exec "apt-get update" ;
         [ ! -z "$_PKG" ] \
           && _VERBOSE="" _exec "apt-get install $_TOPT $_PKG" ;;
   "Ss") _exec "apt-cache search $_PKG" ;;
   "Sc") _exec "apt-get autoclean" ;;
  "Scc") _exec "apt-get clean" ;;
 "Sccc") _exec "rm -fv /var/cache/apt/*.bin /var/cache/apt/archives/*.* /var/lib/apt/lists/*.*; apt-get autoclean" ;;
    "S") if [ -z "$_PKG" ]; then
           _error "You must specify a package"
           exit 1
         else
           _exec "apt-get install $_TOPT $_PKG"
         fi
         ;;
esac
